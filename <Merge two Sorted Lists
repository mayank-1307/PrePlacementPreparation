/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode insert(ListNode head,int x)
    {
         ListNode temp=new ListNode(x);
        if(head==null)
            return temp;
        ListNode curr=head;
        while(curr.next!=null)
            curr=curr.next;
        curr.next=temp;
        return head;
    }
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode curr1=list1;
        ListNode curr2=list2;
        ListNode temp=new ListNode();
        while(curr1!=null || curr2!=null)
        {
            if(curr1==null)
            {
                insert(temp,curr2.val);
                curr2=curr2.next;
            }
            else if(curr2==null)
            {
                insert(temp,curr1.val);
                curr1=curr1.next;
            }
            else if(curr1.val>curr2.val)
            {
                insert(temp,curr2.val);
                curr2=curr2.next;
            }
            else
            {
                insert(temp,curr1.val);
                curr1=curr1.next;
            }
        }
        return temp.next;
    }
}
