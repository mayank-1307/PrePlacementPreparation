
class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        int n=nums.length;
        int [] arr=new int[n-k+1];
        Deque<Integer> dq=new LinkedList<>();
        for(int i=0;i<k;i++)
        {
            while(!dq.isEmpty() && nums[i]>=nums[dq.peekLast()])
                dq.removeLast();
            dq.addLast(i);
        }
        int i,j=0;
        for(i=k;i<n;i++)
        {
            arr[j]=nums[dq.peek()];
            while(!dq.isEmpty() && dq.peek()<=i-k)
                dq.removeFirst();
            while(!dq.isEmpty() &&  nums[i]>=nums[dq.peekLast()])
                  dq.removeLast();
            dq.addLast(i);
            j++;
        }
                  arr[j]=nums[dq.peek()];
                  return arr;
    }
}
